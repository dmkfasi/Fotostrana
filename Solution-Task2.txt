Задача 2
Имеется таблица пользователей:

CREATE TABLE `users` (
`id` int(11) NOT NULL AUTO_INCREMENT,
`name` varchar(32) NOT NULL,
`gender` tinyint(2) NOT NULL,
`email` varchar(1024) NOT NULL,
PRIMARY KEY (`id`)
) ENGINE=InnoDB;

В таблице более 100 млн записей, и она находится под нагрузкой в production (идут запросы на добавление / изменение / удаление).
В поле email может быть от одного до нескольких перечисленных через запятую адресов. Может быть пусто.
Напишите скрипт, который выведет список представленных в таблице почтовых доменов с количеством пользователей по каждому домену.

************************************************************

Решение:

  Так как используется тип таблицы InnoDB, то скорее всего дополнительные средства,
  кэширующие, буферизирующие, создающие временные таблицы в ОЗУ, окажутся неэффективными.

	В случае решения обработки данных внешней программой (скриптом), реализация может быть
	следующей:
	  1. Выборка из базы осуществляется заданными порциями только требуемого поля email,
       с условием, что поле не пустое с сортировкой по единственному доступному индексу и
			 ограничением выборки:
			 `SELECT email FROM users ORDER BY id ASC WHERE id > ? LIMIT ?;`
		2. Из массива записей конкатинируется строка с разделителем "," между элементами массива;
		3. Полученная строка санитизируется от пробелов (и других символов по необходимости);
    4. Результирующая строка разбивается по признаку "," в массив чистых адресов;
		5. Полученный массив итерируется, каждый элемент разбивается по признаку "@" на подмассив
		   из аккаунта и доменного имени;
    6. Аккумулятор доменных имен проверяется на наличие ключа по имени домена:
		   при отсутсвии инициализируется в значение 1, при наличии инкрементируется на 1;
    7. По окончании итерации имеется массив, в котором содержатся доменные имена с количеством
		   аккаунтов для каждого из них.

  При необходимости учёта уникальности каждого из адресов в БД, требуется
	доработка программы.

	Код в файле email_split.php
